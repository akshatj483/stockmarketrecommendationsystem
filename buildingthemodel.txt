#compiling the model
# importing the dataset and libraries
import pandas as pd
data = pd.read_csv("F:\\minorproject-2\\newssentiment\\AAPL_shortened.csv")
data

# fetching the direction of movement using the difference between consecutive price of stock
closings = data.iloc[:, 1].values
difference = []
direction = []
for i in range(len(closings)-1 , -1, -1):
    if(i == 0):
        difference.append(0)
    else:
        difference.append(round((closings[i] - closings[i-1]),2))
difference.reverse()
for j in range(len(difference)):
    if(difference[j] < 0):
        direction.append(-1)
    else:
        direction.append(1)
direction

# adding this feature to the dataframe
data['Difference'] = difference
data['Direction'] = direction

# splitting the dataset into training and testing set
x_train = data.iloc[1:18, 2:3]
x_test = data.iloc[18:, 2:3]
y_train = data.iloc[1:18, 4:5]
y_test = data.iloc[18:, 4:5]
print(len(x_train), len(x_test), len(y_train), len(y_test))

# building the model
from sklearn.tree import DecisionTreeClassifier
model = DecisionTreeClassifier()
model.fit(x_train, y_train)

# making predictions
predictions = model.predict(x_test)
predictions

# visual representation of confusion matrix
import seaborn as sn
import matplotlib.pyplot as plt
df_cm = pd.DataFrame(cm)
sn.set(font_scale=1.4) # for label size
sn.heatmap(df_cm, annot=True, annot_kws={"size": 15}) # font size
plt.show()
